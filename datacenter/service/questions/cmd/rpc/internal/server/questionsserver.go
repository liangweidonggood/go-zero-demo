// Code generated by goctl. DO NOT EDIT!
// Source: questions.proto

package server

import (
	"context"

	"go-zero-demo/datacenter/service/questions/cmd/rpc/internal/logic"
	"go-zero-demo/datacenter/service/questions/cmd/rpc/internal/svc"
	"go-zero-demo/datacenter/service/questions/cmd/rpc/questions"
)

type QuestionsServer struct {
	svcCtx *svc.ServiceContext
}

func NewQuestionsServer(svcCtx *svc.ServiceContext) *QuestionsServer {
	return &QuestionsServer{
		svcCtx: svcCtx,
	}
}

// 获取 问答抽奖活动信息
func (s *QuestionsServer) GetActivitiesInfo(ctx context.Context, in *questions.ActivitiesReq) (*questions.ActInfoResp, error) {
	l := logic.NewGetActivitiesInfoLogic(ctx, s.svcCtx)
	return l.GetActivitiesInfo(in)
}

// 获取 问答奖品信息
func (s *QuestionsServer) GetAwardInfo(ctx context.Context, in *questions.ActivitiesReq) (*questions.AwardInfoResp, error) {
	l := logic.NewGetAwardInfoLogic(ctx, s.svcCtx)
	return l.GetAwardInfo(in)
}

// 获取 问答奖品列表
func (s *QuestionsServer) GetAwardList(ctx context.Context, in *questions.ActivitiesReq) (*questions.AwardListResp, error) {
	l := logic.NewGetAwardListLogic(ctx, s.svcCtx)
	return l.GetAwardList(in)
}

// 获取 问题列表
func (s *QuestionsServer) GetQuestionsList(ctx context.Context, in *questions.ActivitiesReq) (*questions.QuestionsListResp, error) {
	l := logic.NewGetQuestionsListLogic(ctx, s.svcCtx)
	return l.GetQuestionsList(in)
}

//  提交 答案
func (s *QuestionsServer) PostQuestionsChange(ctx context.Context, in *questions.QuestionsAnswerReq) (*questions.QuestionsAnswerResp, error) {
	l := logic.NewPostQuestionsChangeLogic(ctx, s.svcCtx)
	return l.PostQuestionsChange(in)
}

// 获取得分
func (s *QuestionsServer) GetQuestionsGrade(ctx context.Context, in *questions.GradeReq) (*questions.QuestionsAnswerResp, error) {
	l := logic.NewGetQuestionsGradeLogic(ctx, s.svcCtx)
	return l.GetQuestionsGrade(in)
}

// 抽奖
func (s *QuestionsServer) PostTurnTable(ctx context.Context, in *questions.TurnTableReq) (*questions.AwardInfoResp, error) {
	l := logic.NewPostTurnTableLogic(ctx, s.svcCtx)
	return l.PostTurnTable(in)
}

// 填写中奖记录
func (s *QuestionsServer) PostConvert(ctx context.Context, in *questions.ConvertReq) (*questions.ConvertResp, error) {
	l := logic.NewPostConvertLogic(ctx, s.svcCtx)
	return l.PostConvert(in)
}
