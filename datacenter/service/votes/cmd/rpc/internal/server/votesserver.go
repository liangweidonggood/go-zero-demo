// Code generated by goctl. DO NOT EDIT!
// Source: votes.proto

package server

import (
	"context"

	"go-zero-demo/datacenter/service/votes/cmd/rpc/internal/logic"
	"go-zero-demo/datacenter/service/votes/cmd/rpc/internal/svc"
	"go-zero-demo/datacenter/service/votes/cmd/rpc/votes"
)

type VotesServer struct {
	svcCtx *svc.ServiceContext
}

func NewVotesServer(svcCtx *svc.ServiceContext) *VotesServer {
	return &VotesServer{
		svcCtx: svcCtx,
	}
}

// 获取作品信息
func (s *VotesServer) GetEnrollInfo(ctx context.Context, in *votes.EnrollInfoReq) (*votes.EnrollResp, error) {
	l := logic.NewGetEnrollInfoLogic(ctx, s.svcCtx)
	return l.GetEnrollInfo(in)
}

// 获取 作品列表
func (s *VotesServer) GetEnrollList(ctx context.Context, in *votes.ActidReq) (*votes.EnrollListResp, error) {
	l := logic.NewGetEnrollListLogic(ctx, s.svcCtx)
	return l.GetEnrollList(in)
}

// 获取 活动信息
func (s *VotesServer) GetActivityInfo(ctx context.Context, in *votes.ActInfoReq) (*votes.ActInfoResp, error) {
	l := logic.NewGetActivityInfoLogic(ctx, s.svcCtx)
	return l.GetActivityInfo(in)
}

// 报名
func (s *VotesServer) Enroll(ctx context.Context, in *votes.EnrollReq) (*votes.EnrollResp, error) {
	l := logic.NewEnrollLogic(ctx, s.svcCtx)
	return l.Enroll(in)
}

// 投票
func (s *VotesServer) Votes(ctx context.Context, in *votes.VotesReq) (*votes.VotesResp, error) {
	l := logic.NewVotesLogic(ctx, s.svcCtx)
	return l.Votes(in)
}

// 增加活动的爆光量
func (s *VotesServer) IncrActiviView(ctx context.Context, in *votes.ActInfoReq) (*votes.ActInfoResp, error) {
	l := logic.NewIncrActiviViewLogic(ctx, s.svcCtx)
	return l.IncrActiviView(in)
}
